{"version":3,"sources":["App.js","index.js"],"names":["calendarDates","Array","fill","map","e","i","App","useState","choosingType","setChoosingType","startDate","setStartDate","endDate","setEndDate","StyledDateChooser","StyledDateChooserButton","onClick","StyledCalendar","day","index","dayNumber","isSelected","StyledCalendarDay","choosenDay","styled","div","button","props","css","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAIMA,EAAgBC,MAAM,IACzBC,KAAK,GACLC,KAAI,SAACC,EAAGC,GAAJ,OAAUA,KAEF,SAASC,IACtB,MAAwCC,mBAAS,SAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAkCF,mBAAS,MAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA8BJ,mBAAS,MAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAuBA,OACE,qCACE,eAACC,EAAD,WACE,eAACC,EAAD,CAAyBC,QAAS,kBAAMP,EAAgB,UAAxD,wBACa,+BAAOC,OAEpB,eAACK,EAAD,CAAyBC,QAAS,kBAAMP,EAAgB,QAAxD,sBACW,+BAAOG,UAIpB,cAACK,EAAD,UACGjB,EAAcG,KAAI,SAACe,EAAKC,GACvB,IAAMC,EAAYF,EAAM,EAElBG,EAAaD,IAAcV,GAAaU,IAAcR,EAE5D,OACE,cAACU,EAAD,CAEED,WAAYA,EACZL,QAAS,kBA1CDO,EA0CkBH,EAzChCV,GAAaa,EAAab,GAC5BC,EAAaY,GACNd,EAAgB,QAGrBG,GAAWW,EAAaX,GAC1BC,EAAWU,GACJd,EAAgB,QAGJ,UAAjBD,GACFG,EAAaY,GACNd,EAAgB,aAGJ,QAAjBD,GACFK,EAAWU,IAjBf,IAAoBA,GAuCV,SAKGL,EAAM,GAJFC,WAanB,IAAML,EAAoBU,IAAOC,IAAV,sEAKjBV,EAA0BS,IAAOE,OAAV,6TAkBvBT,EAAiBO,IAAOC,IAAV,8RAYdH,EAAoBE,IAAOE,OAAV,kQAYnB,SAACC,GAAD,OACAA,EAAMN,YACNO,YADA,mFC9GJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.56191d24.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport './App.css';\n\nconst calendarDates = Array(31)\n  .fill(0)\n  .map((e, i) => i);\n\nexport default function App() {\n  const [choosingType, setChoosingType] = useState('start');\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n\n  function updateDate(choosenDay) {\n    if (startDate && choosenDay < startDate) {\n      setStartDate(choosenDay);\n      return setChoosingType('end');\n    }\n\n    if (endDate && choosenDay > endDate) {\n      setEndDate(choosenDay);\n      return setChoosingType('end');\n    }\n\n    if (choosingType === 'start') {\n      setStartDate(choosenDay);\n      return setChoosingType('end');\n    }\n\n    if (choosingType === 'end') {\n      setEndDate(choosenDay);\n    }\n  }\n\n  return (\n    <>\n      <StyledDateChooser>\n        <StyledDateChooserButton onClick={() => setChoosingType('start')}>\n          Start Date <span>{startDate}</span>\n        </StyledDateChooserButton>\n        <StyledDateChooserButton onClick={() => setChoosingType('end')}>\n          End Date <span>{endDate}</span>\n        </StyledDateChooserButton>\n      </StyledDateChooser>\n\n      <StyledCalendar>\n        {calendarDates.map((day, index) => {\n          const dayNumber = day + 1;\n\n          const isSelected = dayNumber === startDate || dayNumber === endDate;\n\n          return (\n            <StyledCalendarDay\n              key={index}\n              isSelected={isSelected}\n              onClick={() => updateDate(dayNumber)}\n            >\n              {day + 1}\n            </StyledCalendarDay>\n          );\n        })}\n      </StyledCalendar>\n    </>\n  );\n}\n\nconst StyledDateChooser = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n`;\n\nconst StyledDateChooserButton = styled.button`\n  color: #0b204c;\n  text-transform: uppercase;\n  flex: 1;\n  padding: 15px;\n  background: none;\n  cursor: pointer;\n  border: none;\n  border-bottom: 2px solid rgba(11, 32, 76, 0.2);\n  outline: none;\n\n  span {\n    display: block;\n    min-height: 60px;\n    font-size: 50px;\n  }\n`;\n\nconst StyledCalendar = styled.div`\n  max-width: 400px;\n  border-radius: 10px;\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1),\n    0 10px 10px -5px rgba(0, 0, 0, 0.04);\n  background: #0b204c;\n  color: #fff;\n  padding: 20px;\n`;\n\nconst StyledCalendarDay = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 10px;\n  transition: 0.3s ease background;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  color: #8096c1;\n  background: none;\n\n  ${(props) =>\n    props.isSelected &&\n    css`\n      color: #eee;\n      background: #1a1a1a;\n    `};\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}